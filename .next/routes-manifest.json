{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/[locale]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/api/counter",
      "regex": "^/([^/]+?)/api/counter(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/api/counter(?:/)?$"
    },
    {
      "page": "/[locale]/api/x",
      "regex": "^/([^/]+?)/api/x(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/api/x(?:/)?$"
    },
    {
      "page": "/[locale]/dashboard",
      "regex": "^/([^/]+?)/dashboard(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/dashboard(?:/)?$"
    },
    {
      "page": "/[locale]/dashboard/user-profile/[[...user-profile]]",
      "regex": "^/([^/]+?)/dashboard/user\\-profile(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPuserprofile": "nxtPuser-profile"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/dashboard/user\\-profile(?:/(?<nxtPuserprofile>.+?))?(?:/)?$"
    },
    {
      "page": "/[locale]/sign-in/[[...sign-in]]",
      "regex": "^/([^/]+?)/sign\\-in(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPsignin": "nxtPsign-in"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/sign\\-in(?:/(?<nxtPsignin>.+?))?(?:/)?$"
    },
    {
      "page": "/[locale]/sign-up/[[...sign-up]]",
      "regex": "^/([^/]+?)/sign\\-up(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPsignup": "nxtPsign-up"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/sign\\-up(?:/(?<nxtPsignup>.+?))?(?:/)?$"
    },
    {
      "page": "/[locale]/x",
      "regex": "^/([^/]+?)/x(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/x(?:/)?$"
    },
    {
      "page": "/[locale]/youtube",
      "regex": "^/([^/]+?)/youtube(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/youtube(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/robots.txt",
      "regex": "^/robots\\.txt(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/robots\\.txt(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": [
    {
      "source": "/monitoring(/?)",
      "has": [
        {
          "type": "query",
          "key": "o",
          "value": "(?<orgid>\\d*)"
        },
        {
          "type": "query",
          "key": "p",
          "value": "(?<projectid>\\d*)"
        },
        {
          "type": "query",
          "key": "r",
          "value": "(?<region>[a-z]{2})"
        }
      ],
      "destination": "https://o:orgid.ingest.:region.sentry.io/api/:projectid/envelope/?hsts=0",
      "regex": "^/monitoring(/?)(?:/)?$"
    },
    {
      "source": "/monitoring(/?)",
      "has": [
        {
          "type": "query",
          "key": "o",
          "value": "(?<orgid>\\d*)"
        },
        {
          "type": "query",
          "key": "p",
          "value": "(?<projectid>\\d*)"
        }
      ],
      "destination": "https://o:orgid.ingest.sentry.io/api/:projectid/envelope/?hsts=0",
      "regex": "^/monitoring(/?)(?:/)?$"
    }
  ]
}